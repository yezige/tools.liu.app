name: Publish

on:
  push:
    tags:
      - '**'
      - '!**-alpha'
env:
  IMAGE_NAME: tools.liu.app

jobs:
  push-ghcr:
    runs-on: ubuntu-20.04
    env:
      TZ: Asia/Shanghai
      REGISTRY: ghcr.io
    steps:
      - uses: actions/checkout@v2
      - name: Set output
        id: set-output-id
        run: |
          VERSION=edge
          if [[ $GITHUB_REF == refs/tags/* ]]; then
            VERSION=${GITHUB_REF#refs/tags/v}
          fi
          echo "tags=${VERSION}" >> $GITHUB_OUTPUT

      - name: Login
        uses: docker/login-action@v1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build && Push
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}:${{ steps.set-output-id.outputs.tags }}
            ${{ env.REGISTRY }}/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}:latest

  sync:
    needs: push-ghcr
    runs-on: ubuntu-latest
    env:
      HOST_KEY_SSH: ${{ secrets.HOST_KEY_SSH }}
      HOST_IP: ${{ secrets.HOST_IP }}
      HOST_PORT: ${{ secrets.HOST_PORT }}
      HOST_USER: ${{ secrets.HOST_USER }}
      FOLDER: /data/docker/dnmp
      # FOLDER: /data/dnmp-hk
    steps:
      - name: Set private key
        # set liu_ssh private key
        run: |
          mkdir -p ~/.ssh/
          echo "${{ env.HOST_KEY_SSH }}" > ~/.ssh/id_ed25519
          chmod 600 ~/.ssh/id_ed25519
          ssh-keyscan -p ${{ env.HOST_PORT }} ${{ env.HOST_IP }} >> ~/.ssh/known_hosts

      - name: Update source folder
        run: ssh -p ${{ env.HOST_PORT }} ${{ env.HOST_USER }}@${{ env.HOST_IP }} "cd ${{ env.FOLDER }}/data/www/tools.liu.app/ && sed -i '/github.com/d' ~/.ssh/known_hosts && ssh-keyscan github.com >> ~/.ssh/known_hosts && git pull && git submodule update --init --recursive --remote && echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u yezige --password-stdin && docker pull ghcr.io/yezige/${{ env.IMAGE_NAME }}:latest && /usr/local/bin/docker-compose up -d tools && docker exec -i nginx nginx -s reload && exit"
